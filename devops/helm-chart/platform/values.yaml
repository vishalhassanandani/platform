# Default values for identity-management-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
registryhost: __registryhost__
replicaCount: 1
namespace: __stackname__
imagePullSecrets:
  name: __imagePullSecrets__

image:
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:



service:
  path: /
  name: __service_name__
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      targetPort: 8000

containers:
    - name: __service_name__
      org: __org__
      imageprefix: ":"
      imagename: __image_name__
      tagprefix: "-"
      tag: __chart_version__
      ports: 
       - name: http
         port: 9000
      resources:
        limits:
          cpu: 500m
          memory: 2Gi
        requests:
          cpu: 100m
          memory: 512Mi
      lifecycle:
        postStart:
          exec:
            command:
            - touch
            - /tmp/healthy
        preStop:
          exec:
            command:
            - sleep
            - "10"
      volumeMounts:
      - name: customer-content
        mountPath: /customer-content/
      - name: connectorservice
        mountPath: /connectorservice/


envMap:
  env:
   SERVICE_PORT: "8000"
   CAPTCHA_ENABLED: "false"
   STACK_NAME: ryan
   ENVIRONMENT_NAME: ryan
   DOMAIN_NAME: qa.sps.secops.bmc.com

   
  secretKeyRef: 
    PORTAL_REDIS_PASSWD:
      key: PORTAL_REDIS_PASSWD
      name: portal-redis-password
      optional: true
    OPS_API_KEY:
      key: ops-api-key
      name: ops-secrets     
      optional: true

envFrom:
- configMapRef:
    name: portal-redis-config
    optional: true
- configMapRef:
    name: stack-config
    optional: true  
         
horizontalPodAutoscaler:
  deploymentName: __service_name__
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 50


initContainers: 
  enabled: false

volumes:
- name: connectorservice
  persistentVolumeClaim:
    claimName: connectorservice
- name: customer-content
  persistentVolumeClaim:
    claimName: customer-content 
   
ingress:
  hostname: api-ryan.qa.sps.secops.bmc.com
  cloudopshostname: api-ryan.qa.sps.secops.bmc.com

ingress1:
  ingress:
    name: ade-cloudops-__service_name__-minion
    annotations:
       nginx.org/mergeable-ingress-type: "minion"
       nginx.ingress.kubernetes.io/rewrite-target: /
       nginx.ingress.kubernetes.io/configuration-snippet: |
          rewrite ^(/automation-console/login)$ $1/ redirect;
          rewrite ^(/cloudops/login)$ $1/ redirect;
          rewrite ^/cloudops/login/(.*)$ /$1 break;
          rewrite ^(/cloudops)$ $1/ redirect;
          rewrite ^(/cloudops/services)$ $1/ redirect;
          rewrite ^/cloudops/services/(.*)$ /$1 break;
          rewrite ^/cloudops/(.*)$ /$1 break;
          rewrite ^/automation-console/login/(.*)$ /$1 break;          
    paths: 
    - backend:
        serviceName: __service_name__
        servicePort: 8000
      path: /cloudops/
    - backend:
        serviceName: __service_name__
        servicePort: 8000
      path: /cloudops/services
    - backend:
        serviceName: __service_name__
        servicePort: 8000
      path: /cloudops/login
    - backend:
        serviceName: __service_name__
        servicePort: 8000
      path: /automation-console/login        

cloudopsingress1:
  ingress:
    name: platform-portal-minion
    annotations:
       nginx.org/mergeable-ingress-type: minion
       nginx.ingress.kubernetes.io/rewrite-target: /
       nginx.ingress.kubernetes.io/configuration-snippet: |
          rewrite ^(/automation-console/login)$ $1/ redirect;
          rewrite ^(/cloudops/login)$ $1/ redirect;
          rewrite ^(/login)$ $1/ redirect;
          rewrite ^/cloudops/login/(.*)$ /$1 break;
          rewrite ^(/cloudops)$ $1/ redirect;
          rewrite ^(/cloudops/services)$ $1/ redirect;
          rewrite ^/cloudops/services/(.*)$ /$1 break;
          rewrite ^/cloudops/(.*)$ /$1 break;
          rewrite ^/login/(.*)$ /$1 break;
          rewrite ^/automation-console/login/(.*)$ /$1 break;
    paths: 
    - path: /
      backend:
        serviceName: __service_name__
        servicePort: 8000
    - path: /cloudops/
      backend:
        serviceName: __service_name__
        servicePort: 8000
    - path: /cloudops/login
      backend:
        serviceName: __service_name__
        servicePort: 8000
    - path: /cloudops/services   
      backend:
        serviceName: __service_name__
        servicePort: 8000
    - path: /automation-console/login
      backend:
        serviceName: __service_name__
        servicePort: 8000
    - path: /login/
      backend:
        serviceName: __service_name__
        servicePort: 8000 
